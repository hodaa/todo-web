services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: todo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  todo:
    build: ./backend
    container_name: todo_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DJANGO_DB_NAME=todo
      - DJANGO_DB_USER=root
      - DJANGO_DB_PASSWORD=123456
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432

  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile  
    container_name: react_frontend
    ports:
      - "5173:5173" 
    volumes:
      - ./frontend:/app
    command: ["sh", "-c", "npm ci || npm install && npm run dev"]
    depends_on:
      - todo

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    
  celery:
    image: python:3.11
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && celery -A todo worker -l info"
    volumes:
      - ./backend:/app
    depends_on:
      - rabbitmq
      - todo

  celery-beat:
    image: python:3.11
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && celery -A todo beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./backend:/app
    depends_on:
      - rabbitmq
      - todo

volumes:
  postgres_data:
